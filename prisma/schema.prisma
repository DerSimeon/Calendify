// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(cuid())
  email        String         @unique
  name         String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  CalendarUser CalendarUser[]
  LoginAttempt LoginAttempt[]
  AuditLog     AuditLog[]
}

model Calendar {
  id            String          @id @default(cuid())
  slug          String          @unique
  name          String
  description   String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  visibility    Visibility      @default(PRIVATE) // e.g., "private", "public"
  CalendarUser  CalendarUser[]
  CalendarEvent CalendarEvent[]
}

model CalendarUser {
  id         String   @id @default(cuid())
  calendarId String
  userId     String
  role       Role
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  calendar Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CalendarEvent {
  id          String   @id @default(cuid())
  calendarId  String
  title       String
  description String?
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  calendar Calendar @relation(fields: [calendarId], references: [id], onDelete: Cascade)
}

model LoginAttempt {
  id        String    @id @default(cuid())
  token     String    @unique
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime  @default(now())
  used      Boolean   @default(false)
  usedAt    DateTime?
  expiresAt DateTime  @default(dbgenerated("(now() + interval '15 minutes')"))
}

model AuditLog {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  event     String
  data      Json?
  createdAt DateTime @default(now())
}

enum Role {
  OWNER
  EDITOR
}

enum Visibility {
  PRIVATE
  PUBLIC
}
